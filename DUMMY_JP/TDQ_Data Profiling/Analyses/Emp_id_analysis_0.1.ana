<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_c0VeAOqUEe-tMLU8ePLI8g" name="Emp_id_analysis" creationDate="2025-02-14T10:57:58.109+0530" defaultContext="Default">
    <clientDependency href="../../metadata/connections/JayP/250_mysql_0.1.item#_uI_d8OnqEe-fdZkOhC4CCA"/>
    <taggedValue xmi:id="_c0VeAeqUEe-tMLU8ePLI8g" tag="Status" value="development"/>
    <taggedValue xmi:id="_c0VeAuqUEe-tMLU8ePLI8g" tag="Author" value="jay.p@talend.com"/>
    <taggedValue xmi:id="_c0VeA-qUEe-tMLU8ePLI8g" tag="Purpose" value=""/>
    <taggedValue xmi:id="_c0VeBOqUEe-tMLU8ePLI8g" tag="Description" value=""/>
    <taggedValue xmi:id="_c0VeBeqUEe-tMLU8ePLI8g" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_eGPKweqUEe-tMLU8ePLI8g" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_eGPKwuqUEe-tMLU8ePLI8g" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_eGQY4OqUEe-tMLU8ePLI8g" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_eGnlQOqUEe-tMLU8ePLI8g" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_c0VeBuqUEe-tMLU8ePLI8g">
      <connection href="../../metadata/connections/JayP/250_mysql_0.1.item#_5PpVoMwXEe-PT9KKCohD5w"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
      <analysedElements xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQzcwYEe-PT9KKCohD5w"/>
    </context>
    <results xmi:id="_c0VeB-qUEe-tMLU8ePLI8g">
      <resultMetadata xmi:id="_c0VeCOqUEe-tMLU8ePLI8g" executionDate="2025-02-14T14:11:10.187+0530" executionDuration="1667" message="" executionNumber="4" lastRunOk="true" lastExecutionNumberOk="4"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_1q2PIOqVEe-tMLU8ePLI8g" count="10000" computed="true">
        <parameters xmi:id="_1q2PIeqVEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8XFdoOqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM `jay_db`.`employees` " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_8KDHMOqVEe-tMLU8ePLI8g" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_8KDHMeqVEe-tMLU8ePLI8g" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_8KDHMuqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_8KDHM-qVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_1q2PIuqVEe-tMLU8ePLI8g" count="10000" computed="true">
        <parameters xmi:id="_1q2PI-qVEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8XFdoeqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM `jay_db`.`employees` WHERE `Emp_id` IS NULL " language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_8KkEkOqVEe-tMLU8ePLI8g" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_8KkEkeqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_8KkEkuqVEe-tMLU8ePLI8g" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_8KkEk-qVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_2nAx4OqUEe-tMLU8ePLI8g" count="10000" computed="true" distinctValueCount="10000">
        <parameters xmi:id="_2nAx4eqUEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_9MAv8OqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT DISTINCT `Emp_id` FROM `jay_db`.`employees` ) A" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_9KhiMOqUEe-tMLU8ePLI8g" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_9KhiMeqUEe-tMLU8ePLI8g" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_9KhiMuqUEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_9KhiM-qUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_2nAx4uqUEe-tMLU8ePLI8g" count="10000" computed="true" uniqueValueCount="10000">
        <parameters xmi:id="_2nAx4-qUEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_9MAv8eqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT `Emp_id`, COUNT(*) mycount FROM `jay_db`.`employees`  GROUP BY `Emp_id` HAVING mycount = 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_9K-1MOqUEe-tMLU8ePLI8g" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_9K-1MeqUEe-tMLU8ePLI8g" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_9K-1MuqUEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_9K-1M-qUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_9K-1NOqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_9K-1NeqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_9K-1NuqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_9K-1N-qUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_9K-1OOqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_9K-1OeqUEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_1q2PJOqVEe-tMLU8ePLI8g" count="10000" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_1q2PJeqVEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQwcwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8XGEsOqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT `Emp_id`, COUNT(*) mycount FROM `jay_db`.`employees`  m  GROUP BY `Emp_id` HAVING mycount > 1) AS myquery" language="MySQL"/>
        <builtInIndicatorDefinition xmi:id="_8K9tMOqVEe-tMLU8ePLI8g" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_8K9tMeqVEe-tMLU8ePLI8g" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_8K9tMuqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_8K9tM-qVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_8K9tNOqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_8K9tNeqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_8K9tNuqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_8K9tN-qVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_8K9tOOqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_8K9tOeqVEe-tMLU8ePLI8g" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BoxIndicator" xmi:id="_1q2PJuqVEe-tMLU8ePLI8g">
        <parameters xmi:id="_1q2PJ-qVEe-tMLU8ePLI8g"/>
        <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
        <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Summary_Statistics_0.1.definition#_ccI48BF2Ed2PKb6nEJEvhw"/>
        <IQR xmi:id="_1q2PKOqVEe-tMLU8ePLI8g" computed="true">
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Inter_Quartile_Range_0.1.definition#_ccI48xF2Ed2PKb6nEJEvhw"/>
          <lowerValue xsi:type="dataquality.indicators:LowerQuartileIndicator" xmi:id="_1q2PKeqVEe-tMLU8ePLI8g" computed="true" value="55250.0" datatype="4">
            <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
            <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Lower_Quartile_0.1.definition#_ccI49BF2Ed2PKb6nEJEvhw"/>
            <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8YoVwOqVEe-tMLU8ePLI8g" body="SELECT `Salary` FROM `jay_db`.`employees` WHERE `Salary` IS NOT NULL  ORDER BY `Salary` LIMIT 2499,2" language="MySQL"/>
            <builtInIndicatorDefinition xmi:id="_8NpNwOqVEe-tMLU8ePLI8g" name="Lower Quartile" label="Lower Quartile">
              <taggedValue xmi:id="_8NpNweqVEe-tMLU8ePLI8g" tag="Description" value="1/4th of the records are below this value and 3/4th are above"/>
              <taggedValue xmi:id="_8NpNwuqVEe-tMLU8ePLI8g" tag="Purpose" value="indiquates the threshold of the lowest 1/4th records"/>
              <sqlGenericExpression xmi:id="_8NpNw-qVEe-tMLU8ePLI8g" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  3* SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) AND  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= 3*(SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
              <sqlGenericExpression xmi:id="_8NpNxOqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
              <sqlGenericExpression xmi:id="_8NpNxeqVEe-tMLU8ePLI8g" body=" SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
              <sqlGenericExpression xmi:id="_8NpNxuqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, ROW_NUMBER() OVER(ORDER BY &lt;%=__COLUMN_NAMES__%>) AS NUMBER FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ) T1 WHERE (NUMBER =  INTEGER((SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>) /4) +1) " language="DB2"/>
              <sqlGenericExpression xmi:id="_8NpNx-qVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
              <sqlGenericExpression xmi:id="_8NpNyOqVEe-tMLU8ePLI8g" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR ORDER BY &lt;%=__COLUMN_NAMES__%> ASC " language="Microsoft SQL Server"/>
              <sqlGenericExpression xmi:id="_8NpNyeqVEe-tMLU8ePLI8g" body=" SELECT PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            </builtInIndicatorDefinition>
          </lowerValue>
          <upperValue xsi:type="dataquality.indicators:UpperQuartileIndicator" xmi:id="_1q2PKuqVEe-tMLU8ePLI8g" computed="true" value="85167.0" datatype="4">
            <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
            <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Upper_Quartile_0.1.definition#_ccI49RF2Ed2PKb6nEJEvhw"/>
            <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8bQL8OqVEe-tMLU8ePLI8g" body="SELECT `Salary` FROM `jay_db`.`employees` WHERE `Salary` IS NOT NULL  ORDER BY `Salary` LIMIT 7499,2" language="MySQL"/>
            <builtInIndicatorDefinition xmi:id="_8OMnYOqVEe-tMLU8ePLI8g" name="Upper Quartile" label="Upper Quartile">
              <taggedValue xmi:id="_8ONOcOqVEe-tMLU8ePLI8g" tag="Description" value="1/4th of the records are above this value and 3/4th are below"/>
              <taggedValue xmi:id="_8ONOceqVEe-tMLU8ePLI8g" tag="Purpose" value="indiquates the threshold of the highest 1/4th records"/>
              <sqlGenericExpression xmi:id="_8ONOcuqVEe-tMLU8ePLI8g" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= 3*( SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) ) AND 3 * SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)  &lt;= ( SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END) + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
              <sqlGenericExpression xmi:id="_8ONOc-qVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
              <sqlGenericExpression xmi:id="_8ONOdOqVEe-tMLU8ePLI8g" body=" SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
              <sqlGenericExpression xmi:id="_8ONOdeqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, ROW_NUMBER() OVER(ORDER BY &lt;%=__COLUMN_NAMES__%>) AS NUMBER FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ) T1 WHERE ( NUMBER =  INTEGER((SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>)*3 /4) +1 ) " language="DB2"/>
              <sqlGenericExpression xmi:id="_8ONOduqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
              <sqlGenericExpression xmi:id="_8ONOd-qVEe-tMLU8ePLI8g" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR ORDER BY &lt;%=__COLUMN_NAMES__%> ASC " language="Microsoft SQL Server"/>
              <sqlGenericExpression xmi:id="_8ONOeOqVEe-tMLU8ePLI8g" body=" SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
            </builtInIndicatorDefinition>
          </upperValue>
        </IQR>
        <rangeIndicator xmi:id="_1q2PK-qVEe-tMLU8ePLI8g" computed="true">
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Range_0.1.definition#_ccI49hF2Ed2PKb6nEJEvhw"/>
          <lowerValue xmi:id="_1q2PLOqVEe-tMLU8ePLI8g" computed="true" value="40003" datatype="4">
            <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
            <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Minimum_0.1.definition#_ccJgABF2Ed2PKb6nEJEvhw"/>
            <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8YGxUeqVEe-tMLU8ePLI8g" body="SELECT MIN(`Salary`) FROM `jay_db`.`employees` " language="MySQL"/>
            <builtInIndicatorDefinition xmi:id="_8Mbs0OqVEe-tMLU8ePLI8g" name="Minimum" label="Minimum">
              <taggedValue xmi:id="_8Mbs0eqVEe-tMLU8ePLI8g" tag="Description" value="gives the minimal record"/>
              <taggedValue xmi:id="_8Mbs0uqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the minimal record"/>
              <sqlGenericExpression xmi:id="_8Mbs0-qVEe-tMLU8ePLI8g" body="SELECT MIN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            </builtInIndicatorDefinition>
          </lowerValue>
          <upperValue xmi:id="_1q2PLeqVEe-tMLU8ePLI8g" computed="true" value="99997" datatype="4">
            <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
            <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Maximum_0.1.definition#_ccJgARF2Ed2PKb6nEJEvhw"/>
            <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8YGxUuqVEe-tMLU8ePLI8g" body="SELECT MAX(`Salary`) FROM `jay_db`.`employees` " language="MySQL"/>
            <builtInIndicatorDefinition xmi:id="_8M8qMOqVEe-tMLU8ePLI8g" name="Maximum" label="Maximum">
              <taggedValue xmi:id="_8M8qMeqVEe-tMLU8ePLI8g" tag="Description" value="gives the maximal record"/>
              <taggedValue xmi:id="_8M8qMuqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the maximal record"/>
              <sqlGenericExpression xmi:id="_8M8qM-qVEe-tMLU8ePLI8g" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            </builtInIndicatorDefinition>
          </upperValue>
        </rangeIndicator>
        <meanIndicator xmi:id="_1q2PLuqVEe-tMLU8ePLI8g" count="10000" computed="true" sumStr="702544454">
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Mean_0.1.definition#_ccI48RF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8XGEseqVEe-tMLU8ePLI8g" body="SELECT SUM(`Salary`), COUNT(`Salary`) FROM `jay_db`.`employees` " language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_8LhG0OqVEe-tMLU8ePLI8g" name="Mean" label="Mean">
            <taggedValue xmi:id="_8LhG0eqVEe-tMLU8ePLI8g" tag="Description" value="computes the mean (average) of the records"/>
            <taggedValue xmi:id="_8LhG0uqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the mean value of numerical records"/>
            <sqlGenericExpression xmi:id="_8LhG0-qVEe-tMLU8ePLI8g" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
            <sqlGenericExpression xmi:id="_8LhG1OqVEe-tMLU8ePLI8g" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="MySQL"/>
            <sqlGenericExpression xmi:id="_8LhG1eqVEe-tMLU8ePLI8g" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
            <sqlGenericExpression xmi:id="_8LhG1uqVEe-tMLU8ePLI8g" body="SELECT SUM(&lt;%=__COLUMN_NAMES__%>), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_8LhG1-qVEe-tMLU8ePLI8g" body="SELECT SUM(CAST (&lt;%=__COLUMN_NAMES__%> AS REAL)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
            <sqlGenericExpression xmi:id="_8LhG2OqVEe-tMLU8ePLI8g" body="SELECT SUM(double(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          </builtInIndicatorDefinition>
        </meanIndicator>
        <medianIndicator xmi:id="_1q2PL-qVEe-tMLU8ePLI8g" computed="true" median="70340.5">
          <analyzedElement xsi:type="relational:TdColumn" href="../../metadata/connections/JayP/250_mysql_0.1.item#_G-HQycwYEe-PT9KKCohD5w"/>
          <indicatorDefinition href="../../TDQ_Libraries/Indicators/System Indicators/Summary Statistics/Median_0.1.definition#_ccI48hF2Ed2PKb6nEJEvhw"/>
          <instantiatedExpressions xsi:type="relational:TdExpression" xmi:id="_8YGxUOqVEe-tMLU8ePLI8g" body="SELECT `Salary` FROM `jay_db`.`employees` WHERE `Salary` IS NOT NULL  ORDER BY `Salary` LIMIT 4999,2" language="MySQL"/>
          <builtInIndicatorDefinition xmi:id="_8L_n8OqVEe-tMLU8ePLI8g" name="Median" label="Median">
            <taggedValue xmi:id="_8L_n8eqVEe-tMLU8ePLI8g" tag="Description" value="The median is the value separating the higher half of a sample, a population or a probability distribution from the lower half"/>
            <taggedValue xmi:id="_8L_n8uqVEe-tMLU8ePLI8g" tag="Purpose" value="evaluates the median of the records"/>
            <sqlGenericExpression xmi:id="_8L_n8-qVEe-tMLU8ePLI8g" body="SELECT AVG(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM (SELECT a.&lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> a, &lt;%=__TABLE_NAME__%> b WHERE a.&lt;%=__COLUMN_NAMES__%> IS NOT NULL AND b.&lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> GROUP BY a.&lt;%=__COLUMN_NAMES__%> HAVING  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END)  +  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) AND  SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> > a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END) &lt;= (SUM(CASE WHEN a.&lt;%=__COLUMN_NAMES__%> = b.&lt;%=__COLUMN_NAMES__%> THEN 1 ELSE 0 END)  + SUM(CASE WHEN  b.&lt;%=__COLUMN_NAMES__%> &lt; a.&lt;%=__COLUMN_NAMES__%>   THEN 1 ELSE 0 END)) ) T" language="SQL"/>
            <sqlGenericExpression xmi:id="_8L_n9OqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_OFFSET__%>,&lt;%=__LIMIT_ROW__%>" language="MySQL"/>
            <sqlGenericExpression xmi:id="_8L_n9eqVEe-tMLU8ePLI8g" body="SELECT AVG(&lt;%=__COLUMN_NAMES__%>) FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) OVER( ) total, CAST(COUNT(*) OVER( ) AS DECIMAL)/2 mid, CEIL(CAST(COUNT(*) OVER( ) AS DECIMAL)/2) next, ROW_NUMBER() OVER ( ORDER BY &lt;%=__COLUMN_NAMES__%>) rn FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) x WHERE ( MOD(total,2) = 0&#x9; AND rn IN ( mid, mid+1 ) ) OR ( MOD(total,2) = 1 AND rn = next )" language="Oracle"/>
            <sqlGenericExpression xmi:id="_8L_n9uqVEe-tMLU8ePLI8g" body="SELECT MEDIAN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" version="10"/>
            <sqlGenericExpression xmi:id="_8L_n9-qVEe-tMLU8ePLI8g" body=" SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" version="9"/>
            <sqlGenericExpression xmi:id="_8L_n-OqVEe-tMLU8ePLI8g" body="SELECT AVG(double(&lt;%=__COLUMN_NAMES__%>)) FROM ( SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) OVER( ) total, CAST(COUNT(*) OVER( ) AS DECIMAL)/2 mid, CEIL(CAST(COUNT(*) OVER( ) AS DECIMAL)/2) next, ROW_NUMBER() OVER ( ORDER BY &lt;%=__COLUMN_NAMES__%>) rn FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>) x WHERE ( MOD(total,2) = 0&#x9; AND rn IN ( mid, mid+1 ) ) OR ( MOD(total,2) = 1 AND rn = next )" language="DB2"/>
            <sqlGenericExpression xmi:id="_8L_n-eqVEe-tMLU8ePLI8g" body="SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> LIMIT &lt;%=__LIMIT_ROW__%> OFFSET &lt;%=__LIMIT_OFFSET__%>" language="PostgreSQL"/>
            <sqlGenericExpression xmi:id="_8L_n-uqVEe-tMLU8ePLI8g" body="SELECT AVG(cast (&lt;%=__COLUMN_NAMES__%> AS NUMERIC)) FROM (SELECT distinct &lt;%=__COLUMN_NAMES__%> FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> ) STT WHERE (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>) &lt;= (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> ) AS SOU WHERE SOU.&lt;%=__COLUMN_NAMES__%> &lt;= STT.&lt;%=__COLUMN_NAMES__%>) AND (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>) &lt;= (SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM (SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> UNION ALL SELECT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%>) AS SUR WHERE SUR.&lt;%=__COLUMN_NAMES__%> >= STT.&lt;%=__COLUMN_NAMES__%>) ) T" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
            <sqlGenericExpression xmi:id="_8L_n--qVEe-tMLU8ePLI8g" body="SELECT * FROM (SELECT TOP &lt;%=__LIMIT_ROW__%> &lt;%=__COLUMN_NAMES__%> FROM (SELECT TOP &lt;%=__LIMIT_ROW_PLUS_OFFSET__%> &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%> ORDER BY &lt;%=__COLUMN_NAMES__%> ASC ) AS FOO ORDER BY &lt;%=__COLUMN_NAMES__%> DESC ) AS BAR" language="Microsoft SQL Server"/>
            <sqlGenericExpression xmi:id="_8L_n_OqVEe-tMLU8ePLI8g" body="SELECT MEDIAN(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NOT NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          </builtInIndicatorDefinition>
        </medianIndicator>
      </indicators>
    </results>
    <parameters xmi:id="_c0VeCeqUEe-tMLU8ePLI8g" dataFilter="_eGpacOqUEe-tMLU8ePLI8g" analysisType="Multiple Column Analysis"/>
    <contextType xmi:id="_eGPKwOqUEe-tMLU8ePLI8g" confirmationNeeded="false" hide="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <dataquality.domain:Domain xmi:id="_eGpacOqUEe-tMLU8ePLI8g" name="Emp_id_analysis">
    <ranges xmi:id="_eGpaceqUEe-tMLU8ePLI8g">
      <expressions xmi:id="_eGpacuqUEe-tMLU8ePLI8g">
        <expression xsi:type="relational:TdExpression" xmi:id="_eGpac-qUEe-tMLU8ePLI8g" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
